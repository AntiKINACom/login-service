// Using legacy plugin application:
buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://repository-cdn.liferay.com/nexus/content/groups/public"
        }
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'com.moowork.gradle:gradle-node-plugin:1.3.1'
        classpath 'com.liferay:com.liferay.gradle.plugins.css.builder:5.0.1'
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'
apply plugin: 'com.liferay.css.builder'

// Using the plugins DSL:
//plugins {
//    id 'java'
//    id 'application'
//    id 'io.spring.dependency-management' version "1.0.11.RELEASE"
//    id 'org.springframework.boot' version "${springBootVersion}"
//    id 'com.moowork.node' version '1.3.1'
//    id 'com.liferay.css.builder' version '5.0.1'
//}


group = 'com.yourdomain'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    runtimeOnly 'com.h2database:h2'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
}

application {
    mainClassName = 'com.yourdomain.LoginApplication'
}

processResources {
    exclude(["**/*.scss", "**/*.ts"])
}

buildCSS {
    outputDirName = "./"
}